#!/bin/bash
INSTALLED=$(which docker-compose)
INSTALLED_DOCKER=$(which docker)
OPTION=$1
DATABASE=$2

    if [ -e "$DATABASE" && "$DATABASE" == "POSTGRES" ]; then
	DATABASE=postgres
    else
	DATABASE=mysql
    fi
#download
wget https://raw.githubusercontent.com/fredericomartini-docker-libraries/environment-php7-dev/master/environment-$DATABASE-dev.yml -O /tmp/environment-dev.yml

COMPOSE_FILE='/tmp/environment-dev.yml'
    if [ ! -e "$INSTALLED_DOCKER" ]; then
        echo "Docker isn't installed, must be installed first!"
        echo 'Running script installation docker...'
        sleep 2
        wget -O - https://raw.githubusercontent.com/fredericomartini/shell/master/install_docker.sh | sh
    fi

    if [ ! -e "$INSTALLED" ]; then
       #instalar 
       INSTALLED_CURL=$(which curl)
       if [ ! -e "$INSTALLED_CURL" ]; then
           sudo apt-get update && sudo apt-get install curl -y
       fi
       sudo -i curl -L https://github.com/docker/compose/releases/download/1.7.0/docker-compose-$(uname -s)-$(uname -m) > /usr/local/bin/docker-compose
       sudo chmod +x /usr/local/bin/docker-compose
    fi       


function run() {
    case $OPTION in
            start) 
                docker-compose -f $COMPOSE_FILE stop 
                docker-compose -f $COMPOSE_FILE rm --all -f
                docker-compose -f $COMPOSE_FILE  create
                docker-compose -f $COMPOSE_FILE  start
                ;;
            stop) 
                docker-compose -f $COMPOSE_FILE stop
                ;;
            clear)
                docker-compose -f $COMPOSE_FILE stop 
                docker-compose -f $COMPOSE_FILE rm -f
                ;;
            copy)
                sudo cp -R php /bin
                sudo cp -R composer /bin
                ;;
            *) echo "USAGE: start (MYSQL | POSTGRES) | stop | clear | copy (copy php and composer to /bin/)"
    esac
}

run

function 
